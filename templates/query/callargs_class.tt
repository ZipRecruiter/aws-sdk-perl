[%- operation = c.operation(op_name) %]
[%- iclass = c.input_for_operation(op_name) %]
package [% c.api %]::[% operation.name %];
  use Moose;
[% FOREACH param_name IN iclass.members.keys.sort -%]
  [%- member = c.shape(iclass.members.$param_name.shape) -%]
  has [% param_name %] => (is => 'ro', isa => '[% member.perl_type %]'
  [%- IF (iclass.members.${param_name}.locationName) %], traits => ['NameInRequest'], request_name => '[% iclass.members.${param_name}.locationName %]' [% END %]
  [%- IF (iclass.members.$param_name.streaming == 1) %], traits => ['ParamInBody'][% END %]
  [%- IF (c.required_in_shape(iclass,param_name)) %], required => 1[% END %]);
[% END %]
  use MooseX::ClassAttribute;

  class_has _api_call => (isa => 'Str', is => 'ro', default => '[% op_name %]');
  class_has _returns => (isa => 'Str', is => 'ro', default => '
    [%- IF (operation.output.keys.size) -%]
      [%- c.api %]::[% c.shapename_for_operation_output(op_name) -%]
    [%- ELSE -%]Paws::API::Response[% END -%]');
  class_has _result_key => (isa => 'Str', is => 'ro'[% IF (operation.output.keys.size) %], default => '[% op_name %]Result'[% END %]);
1;

[% INCLUDE 'callclass_documentation.tt' %]
