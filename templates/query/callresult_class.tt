[%- operation = c.result_for_operation(op_name) %]
[%- iclass = c.result_for_operation(op_name) %]
[%- IF (iclass) %]
package [% c.api %]::[% c.shapename_for_operation_output(op_name) %];
  use Moose;
[% FOREACH param_name IN iclass.members.keys.sort -%]
  [%- traits = [] -%]
  [%- member_shape_name = iclass.members.$param_name.shape %]
  [%- member = c.shape(member_shape_name) -%]
  has [% param_name %] => (is => 'ro', isa => '[% member.perl_type %]'
  [%- IF (member.locationName); traits.push('NameInRequest') %], request_name => '[% member.locationName %]'[% END %]
  [%- IF (iclass.members.$param_name.streaming == 1); traits.push('ParamInBody'); END %]
  [%- IF (member.type == 'list' and member.member.locationName); traits.push('NameInRequest') %], request_name => '[% member.member.locationName %]'[% END %]
  [%- encoder = c.encoders_struct.$member_shape_name; IF (encoder); traits.push('JSONAttribute') %], decode_as => '[% encoder.encoding %]', method => '[% encoder.alias %]'[% END %]
  [%- IF (traits.size) %], traits => [[% FOREACH trait=traits %]'[% trait %]',[% END %]][% END -%]
  [%- IF (c.required_in_shape(iclass,param_name)) %], required => 1[% END %]);
[% END %]
  has _request_id => (is => 'ro', isa => 'Str');
[%- END %]
1;

[% INCLUDE 'class_documentation.tt' %]
