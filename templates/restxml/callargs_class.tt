[%- operation = c.operation(op_name) %]
[%- iclass = c.input_for_operation(op_name) %]
package [% c.api %]::[% op_name %];
  use Moose;
  use Types::Standard -types;
  use MooseX::ClassAttribute;
  use namespace::clean -except => 'meta';
  with 'Paws::API::CallArgs';

[% FOREACH param_name IN iclass.members.keys.sort -%]
  [%- member = c.shape(iclass.members.$param_name.shape) -%]
  [%- traits = [] -%]
  has [% param_name %] => (is => 'ro', isa => [% member.perl_type %]
  [%- IF (iclass.members.$param_name.location == 'header') %], header_name => '[% iclass.members.$param_name.locationName %]'
    [%- IF (param_name == 'ContentMD5'); traits.push('AutoInHeader') %], auto => 'MD5'
    [%- ELSE; traits.push('ParamInHeader') %]
  [%- END %]
  [%- ELSIF (iclass.members.$param_name.location == 'headers');     traits.push('ParamInHeaders') %], header_prefix => '[% iclass.members.$param_name.locationName %]'
  [%- ELSIF (iclass.members.$param_name.location == 'querystring'); traits.push('ParamInQuery') %], query_name => '[% iclass.members.$param_name.locationName %]'
  [%- ELSIF (iclass.members.$param_name.location == 'uri');         traits.push('ParamInURI') %], uri_name => '[% iclass.members.$param_name.locationName %]'
  [%- ELSIF (iclass.members.$param_name.streaming == 1);            traits.push('ParamInBody'); %][% stream_param = param_name -%]
  [%- ELSE %][% IF (iclass.members.$param_name.locationName != '') -%]
               [%- IF (iclass.members.$param_name.locationName == 'x-amz-meta-') %]
               [%- ELSIF (iclass.members.$param_name.locationName != param_name); traits.push('NameInRequest'); %], request_name => '[% iclass.members.$param_name.locationName -%]'
               [%- END -%]
             [%- END -%]
  [%- END -%]
  [%- IF (traits.size) %], traits => [[% FOREACH trait=traits %]'[% trait %]'[% ',' IF (NOT loop.last) %][% END %]][% END -%]
  [%- IF (c.required_in_shape(iclass,param_name)) %], required => 1[% END %]);
[% END %]

  class_has _api_call => (isa => 'Str', is => 'ro', default => '[% op_name %]');
  class_has _api_uri  => (isa => 'Str', is => 'ro', default => '[% operation.http.requestUri %]');
  class_has _api_method  => (isa => 'Str', is => 'ro', default => '[% operation.http.method %]');
  class_has _returns => (isa => 'Str', is => 'ro', default => '
    [%- IF (operation.output.keys.size) -%]
      [%- c.api %]::[% c.shapename_for_operation_output(op_name) -%]
    [%- ELSE -%]Paws::API::Response[% END -%]');
  class_has _result_key => (isa => 'Str', is => 'ro');
  [% IF (stream_param) %]class_has _stream_param => (is => 'ro', default => '[% c.to_payload_shape_name(stream_param) %]');[% END %]

[% INCLUDE object_raw_constructor.tt members = iclass.members %]

  __PACKAGE__->meta->make_immutable;
1;

[% INCLUDE 'callclass_documentation.tt' %]
